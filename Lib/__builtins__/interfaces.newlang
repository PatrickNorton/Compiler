from types typeget Callable, Hashable, Iterable, Indexable, Sliceable

export int, list, set, dict

interface int {
    operator + (int other, /) -> int
    operator - (int other, /) -> int
    operator * (int other, /) -> int
    operator / (int other, /) -> int
    operator ** (int other, /) -> int
    operator // (int other, /) -> int
    operator u- -> int

    operator == (int other, /)
    operator <=> (int other, /)
    operator << (int other, /) -> int
    operator >> (int other, /) -> int

    operator & (int other, /) -> int
    operator | (int other, /) -> int
    operator ^ (int other, /) -> int
    operator ~ -> int

    operator % (int other, /) -> int

    operator str
    operator repr
    operator bool
    operator hash
}

interface list[T] from Iterable[T], Indexable[int, T], Sliceable[T] {
    operator new (*T items, /)
    operator new (Iterable[T] items, /)

    operator + (list[T] other, /) -> cls
    operator * (int size, /) -> cls

    operator bool

    method append(T value, /) -> self
    method extend(Iterable[T] values, /)
    method remove(T value, /) -> int
    method pop(int index, /) -> T
    method clear()
    method index(T value, /) -> uint
    method reverse()
    method insert(T value, int index)
}

interface set[T] from Iterable[T], Comparable[Set[T]] {
    operator new (*T items, /)
    operator new (Iterable[T] items, /)

    operator + (set[T] other, /) -> Set[T]
    operator | = operator +
    operator & (set[T] other, /) -> Set[T]
    operator ^ (set[T] other, /) -> Set[T]

    operator del[] (T value, /)
    operator bool

    method add(T value, /) -> self
    method remove(T value, /)
    method discard(T value, /)
    method pop() -> T
    method clear()
}

interface dict[K, V] from Hashable, Iterable[K, V], Indexable[K, V] {
    operator new (*tuple[K, V] items, /)
    operator new (dict[K, V] items, /)

    operator + (dict[K, V] items, /) -> dict[K, V]

    operator [] (K key) -> V
    operator []= (K key, V value)
    operator del[] (V value)
    operator in (K key)

    operator iter -> K, V
    operator bool

    method remove(V value) -> K
    method keyOf(V value) -> K
}


