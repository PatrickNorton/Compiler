from types typeget Callable, Iterable, Indexable, Sliceable

export list

interface list[T] from Iterable[T], Indexable[int, T], Sliceable[T] {
    operator new (*T items, /)
    operator new (Iterable[T] items, /)

    operator in (T value, /)
    operator + (list[T] other, /) -> cls
    operator * (int size, /) -> cls

    method append(T value, /) -> self
    method extend(Iterable[T] values, /)
    method remove(T value, /) -> int
    method pop(int index, /) -> T
    method clear()
    method index(T value, /)
    method reverse()
}
