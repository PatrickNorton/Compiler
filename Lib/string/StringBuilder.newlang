export StringBuilder

class StringBuilder {
    private list[char] chars

    public property int length {
        get {
            return self.chars.length
        }
    }

#     public operator new (*, int length) {
#         self.chars = []
#     }

    public operator new (*object objects) {
        self.chars = [*str(i) for var i in objects]
    }

    public operator + (object obj) -> mut cls {
        self.chars += str(obj)
        return self
    }

    public operator [] (int index) -> char {
        return self.chars[index]
    }

    public operator [:] (int start, int stop, int step) -> list[char] {
        return self.chars[start:stop:step]
    }

    public operator iter -> char {
        yield from self.chars
    }

    public operator iter[:] (int start, int stop, int step) -> char {
        yield from self.chars[start:stop:step]
    }

    public operator str {
        return str(*self.chars)
    }
}
