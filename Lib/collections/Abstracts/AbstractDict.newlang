from itertools import all

export AbstractDict

interface AbstractDict[K, V] from dict[K, V] {
    operator == (dict[K, V] other) {
        return (self.length == other.length
                and all(k in other and other[k] == v for K key, V value in self))
    }

    operator bool {
        return self.length
    }

    public method keyOf(V value) -> K {
        for K key, V val in self {
            return key if value == val
        }
        raise ValueError(f"Dict does not contain value {value}")
    }
}
