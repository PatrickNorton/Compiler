from itertools import any

export ChainMap

# FIXME?? Value changes act on sub-maps themselves... should that happen?
final class ChainMap[K, V] from dict[K, V] {
    private const tuple[*dict[K, V]] values

    public operator new (*dict[K, V] values) {
        self.values = values
    }

    public operator [] (K key) -> V {
        for var dict in self.values {
            try {
                return dict[key]
            } except ValueError {}
        }
        raise ValueError(f"Key {key} not found")
    }

    public operator []= (K key, V value) {
        self.values[0] = value
    }

    public operator del[] (K key) {
        for var subDict in self.values {
            if key in subDict {
                del subDict[key]
            }
        }
    }

    public operator iter -> K, V {
        yield from (*d for var d in self.values)
    }

    public operator in (K key) {
        return any(K in i for var i in self.values)
    }

    public operator hash {
        return hash(f"ChainMap[{K}, {V}]", *self.values)
    }

    public operator repr {
        var inner = ", ".join(f"{key}: {value}" for K key, V value in self)
        return f"ChainMap[{K}, {V}]: \{{inner}\}"
    }
}
