from annotations import DefaultInterface

export Callable, Iterable, Indexable, Sliceable

$DefaultInterface
interface Boolable {
    operator bool
}

$DefaultInterface
interface Callable[*P, R] {
    operator () (*P values, /) -> R
}

$DefaultInterface
interface Hashable {
    operator hash
}

$DefaultInterface
interface Iterable[T] {
    operator iter -> T
}

$DefaultInterface
interface Indexable[K, V] {
    operator [] (K key, /) -> V
    operator []= (K key, V value, /)
}

$DefaultInterface
interface Sliceable[V] {
    operator [:] (int start, int stop, int step, /) -> Iterable[V]
    operator [:]= (int start, int stop, int step, Iterable[V] values, /)
}
